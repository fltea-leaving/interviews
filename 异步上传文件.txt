一、
通过iframe来实现无刷新的的文件上传，其实是有刷新的，只是在iframe里面隐藏了而已

简单的原理说明：

<form id="form1" method="post" action="upload.do" enctype="multipart/form-data"  target="uploadframe" >
<input type="file" id="upload" name="文件上传" />
</form>

<iframe id="uploadframe" name="result_frame"   style="visibility:hidden;"></iframe>

form里面的target要与iframe里面的id的值相等，指示是form相应了post事件，也就是post时间相应的时候刷新的是iframe而不是整个页面。

二、
利用jQuery的插件AjaxFileUpload 可以简单地实现这个异步的上传的效果      插件地址： http://www.phpletter.com/Our-Projects/AjaxFileUpload/

    * iframe上传
　　* ajax上传
　　* 进度条
　　* 文件预览
　　* 拖放上传

<form id="upload-form" action="upload.php" method="post" enctype="multipart/form-data" >
　　　　<input type="file" id="upload" name="upload" /> <br />
　　　　<input type="submit" value="Upload" />
　　</form>

　　var form = $("#upload-form");
　　form.on('submit',function() {
　　　　// 此处动态插入iframe元素
　var seed = Math.floor(Math.random() * 1000);
　　var id = "uploader-frame-" + seed;
　　var callback = "uploader-cb-" + seed;
　　var iframe = $('<iframe id="'+id+'" name="'+id+'" style="display:none;">');
　　var url = form.attr('action');
　　form.attr('target', id).append(iframe).attr('action', url + '?iframe=' + callback);
　　});
最后一行，有两个地方值得注意。首先，它为表单添加target属性，指向动态插入的iframe窗口，这使得上传结束后，服务器将结果返回iframe窗口，所以当前页面就不会跳转了。其次，它在action属性指定的上传网址的后面，添加了一个参数，使得服务器知道回调函数的名称。这样就能将服务器返回的信息，从iframe窗口传到上层页面。
　　window[callback] = function(data){
　　　　console.log('received callback:', data);
　　　　iframe.remove(); //removing iframe
　　　　form.removeAttr('target');
　　　　form.attr('action', url);
　　　　window[callback] = undefined; //removing callback
　　};


　// 检查是否支持FormData
　　if(window.FormData) {　
　　　　var formData = new FormData();
　　　　// 建立一个upload表单项，值为上传的文件
　　　　formData.append('upload', document.getElementById('upload').files[0]);
　　　　var xhr = new XMLHttpRequest();
　　　　xhr.open('POST', $(this).attr('action'));
　　　　// 定义上传完成后的回调函数
　　　　xhr.onload = function () {
　　　　　　if (xhr.status === 200) {
　　　　　　　　console.log('上传成功');
　　　　　　} else {
　　　　　　　　console.log('出错了');
　　　　　　}
　　　　};
　　　　xhr.send(formData);
　　}
xhr.upload.onprogress = function (event) {
　　　　if (event.lengthComputable) {
　　　　　　var complete = (event.loaded / event.total * 100 | 0);
　　　　　　var progress = document.getElementById('uploadprogress');
　　　　　　progress.value = progress.innerHTML = complete;
　　　　}
　　};

　// 检查浏览器是否支持拖放上传。
　　if('draggable' in document.createElement('span')){
　　　　var holder = document.getElementById('holder');
　　　　holder.ondragover = function () { this.className = 'hover'; return false; };
　　　　holder.ondragend = function () { this.className = ''; return false; };
　　　　holder.ondrop = function (event) {
　　　　　　event.preventDefault();
　　　　　　this.className = '';
　　　　　　var files = event.dataTransfer.files;
　　　　　　// do something with files
　　　　};
　　}

http://www.ruanyifeng.com/blog/2012/08/file_upload.html